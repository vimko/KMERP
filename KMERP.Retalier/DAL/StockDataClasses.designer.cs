#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KMERP.Retalier.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="KMERPR")]
	public partial class StockDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertptypes(ptypes instance);
    partial void Updateptypes(ptypes instance);
    partial void Deleteptypes(ptypes instance);
    partial void Insertstocks(stocks instance);
    partial void Updatestocks(stocks instance);
    partial void Deletestocks(stocks instance);
    partial void Insertclothinginstocks(clothinginstocks instance);
    partial void Updateclothinginstocks(clothinginstocks instance);
    partial void Deleteclothinginstocks(clothinginstocks instance);
    partial void Insertsales(sales instance);
    partial void Updatesales(sales instance);
    partial void Deletesales(sales instance);
    partial void Insertbacksales(backsales instance);
    partial void Updatebacksales(backsales instance);
    partial void Deletebacksales(backsales instance);
    #endregion
		
		public StockDataClassesDataContext() : 
				base(global::KMERP.Retalier.Properties.Settings.Default.KMERPRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ptypes> ptypes
		{
			get
			{
				return this.GetTable<ptypes>();
			}
		}
		
		public System.Data.Linq.Table<stocks> stocks
		{
			get
			{
				return this.GetTable<stocks>();
			}
		}
		
		public System.Data.Linq.Table<clothinginstocks> clothinginstocks
		{
			get
			{
				return this.GetTable<clothinginstocks>();
			}
		}
		
		public System.Data.Linq.Table<sales> sales
		{
			get
			{
				return this.GetTable<sales>();
			}
		}
		
		public System.Data.Linq.Table<backsales> backsales
		{
			get
			{
				return this.GetTable<backsales>();
			}
		}
		
		public System.Data.Linq.Table<salers> salers
		{
			get
			{
				return this.GetTable<salers>();
			}
		}
	}
	
	[Table(Name="dbo.ptypes")]
	public partial class ptypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _fullname;
		
		private string _usercode;
		
		private string _pcode;
		
		private string _psize;
		
		private string _color;
		
		private string _seasontype;
		
		private string _manorwoman;
		
		private string _cdes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnusercodeChanging(string value);
    partial void OnusercodeChanged();
    partial void OnpcodeChanging(string value);
    partial void OnpcodeChanged();
    partial void OnpsizeChanging(string value);
    partial void OnpsizeChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnseasontypeChanging(string value);
    partial void OnseasontypeChanged();
    partial void OnmanorwomanChanging(string value);
    partial void OnmanorwomanChanged();
    partial void OncdesChanging(string value);
    partial void OncdesChanged();
    #endregion
		
		public ptypes()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_fullname", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[Column(Storage="_usercode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usercode
		{
			get
			{
				return this._usercode;
			}
			set
			{
				if ((this._usercode != value))
				{
					this.OnusercodeChanging(value);
					this.SendPropertyChanging();
					this._usercode = value;
					this.SendPropertyChanged("usercode");
					this.OnusercodeChanged();
				}
			}
		}
		
		[Column(Storage="_pcode", DbType="VarChar(100)")]
		public string pcode
		{
			get
			{
				return this._pcode;
			}
			set
			{
				if ((this._pcode != value))
				{
					this.OnpcodeChanging(value);
					this.SendPropertyChanging();
					this._pcode = value;
					this.SendPropertyChanged("pcode");
					this.OnpcodeChanged();
				}
			}
		}
		
		[Column(Storage="_psize", DbType="VarChar(10)")]
		public string psize
		{
			get
			{
				return this._psize;
			}
			set
			{
				if ((this._psize != value))
				{
					this.OnpsizeChanging(value);
					this.SendPropertyChanging();
					this._psize = value;
					this.SendPropertyChanged("psize");
					this.OnpsizeChanged();
				}
			}
		}
		
		[Column(Storage="_color", DbType="VarChar(20)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[Column(Storage="_seasontype", DbType="VarChar(100)")]
		public string seasontype
		{
			get
			{
				return this._seasontype;
			}
			set
			{
				if ((this._seasontype != value))
				{
					this.OnseasontypeChanging(value);
					this.SendPropertyChanging();
					this._seasontype = value;
					this.SendPropertyChanged("seasontype");
					this.OnseasontypeChanged();
				}
			}
		}
		
		[Column(Storage="_manorwoman", DbType="VarChar(4)")]
		public string manorwoman
		{
			get
			{
				return this._manorwoman;
			}
			set
			{
				if ((this._manorwoman != value))
				{
					this.OnmanorwomanChanging(value);
					this.SendPropertyChanging();
					this._manorwoman = value;
					this.SendPropertyChanged("manorwoman");
					this.OnmanorwomanChanged();
				}
			}
		}
		
		[Column(Storage="_cdes", DbType="VarChar(200)")]
		public string cdes
		{
			get
			{
				return this._cdes;
			}
			set
			{
				if ((this._cdes != value))
				{
					this.OncdesChanging(value);
					this.SendPropertyChanging();
					this._cdes = value;
					this.SendPropertyChanged("cdes");
					this.OncdesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.stocks")]
	public partial class stocks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _usercode;
		
		private string _fullname;
		
		private string _sdes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnusercodeChanging(string value);
    partial void OnusercodeChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnsdesChanging(string value);
    partial void OnsdesChanged();
    #endregion
		
		public stocks()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_usercode", DbType="VarChar(50)")]
		public string usercode
		{
			get
			{
				return this._usercode;
			}
			set
			{
				if ((this._usercode != value))
				{
					this.OnusercodeChanging(value);
					this.SendPropertyChanging();
					this._usercode = value;
					this.SendPropertyChanged("usercode");
					this.OnusercodeChanged();
				}
			}
		}
		
		[Column(Storage="_fullname", DbType="VarChar(100)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[Column(Storage="_sdes", DbType="VarChar(200)")]
		public string sdes
		{
			get
			{
				return this._sdes;
			}
			set
			{
				if ((this._sdes != value))
				{
					this.OnsdesChanging(value);
					this.SendPropertyChanging();
					this._sdes = value;
					this.SendPropertyChanged("sdes");
					this.OnsdesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.clothinginstocks")]
	public partial class clothinginstocks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _pid;
		
		private System.Guid _sid;
		
		private System.Nullable<int> _incount;
		
		private decimal _inprice;
		
		private decimal _minsaleprice;
		
		private decimal _willprice;
		
		private System.Nullable<System.DateTime> _instockdate;
		
		private System.Nullable<int> _hasoutstock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnpidChanging(System.Guid value);
    partial void OnpidChanged();
    partial void OnsidChanging(System.Guid value);
    partial void OnsidChanged();
    partial void OnincountChanging(System.Nullable<int> value);
    partial void OnincountChanged();
    partial void OninpriceChanging(decimal value);
    partial void OninpriceChanged();
    partial void OnminsalepriceChanging(decimal value);
    partial void OnminsalepriceChanged();
    partial void OnwillpriceChanging(decimal value);
    partial void OnwillpriceChanged();
    partial void OninstockdateChanging(System.Nullable<System.DateTime> value);
    partial void OninstockdateChanged();
    partial void OnhasoutstockChanging(System.Nullable<int> value);
    partial void OnhasoutstockChanged();
    #endregion
		
		public clothinginstocks()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_pid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[Column(Storage="_sid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[Column(Storage="_incount", DbType="Int")]
		public System.Nullable<int> incount
		{
			get
			{
				return this._incount;
			}
			set
			{
				if ((this._incount != value))
				{
					this.OnincountChanging(value);
					this.SendPropertyChanging();
					this._incount = value;
					this.SendPropertyChanged("incount");
					this.OnincountChanged();
				}
			}
		}
		
		[Column(Storage="_inprice", DbType="Decimal(18,2) NOT NULL")]
		public decimal inprice
		{
			get
			{
				return this._inprice;
			}
			set
			{
				if ((this._inprice != value))
				{
					this.OninpriceChanging(value);
					this.SendPropertyChanging();
					this._inprice = value;
					this.SendPropertyChanged("inprice");
					this.OninpriceChanged();
				}
			}
		}
		
		[Column(Storage="_minsaleprice", DbType="Decimal(18,2) NOT NULL")]
		public decimal minsaleprice
		{
			get
			{
				return this._minsaleprice;
			}
			set
			{
				if ((this._minsaleprice != value))
				{
					this.OnminsalepriceChanging(value);
					this.SendPropertyChanging();
					this._minsaleprice = value;
					this.SendPropertyChanged("minsaleprice");
					this.OnminsalepriceChanged();
				}
			}
		}
		
		[Column(Storage="_willprice", DbType="Decimal(18,2) NOT NULL")]
		public decimal willprice
		{
			get
			{
				return this._willprice;
			}
			set
			{
				if ((this._willprice != value))
				{
					this.OnwillpriceChanging(value);
					this.SendPropertyChanging();
					this._willprice = value;
					this.SendPropertyChanged("willprice");
					this.OnwillpriceChanged();
				}
			}
		}
		
		[Column(Storage="_instockdate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> instockdate
		{
			get
			{
				return this._instockdate;
			}
			set
			{
				if ((this._instockdate != value))
				{
					this.OninstockdateChanging(value);
					this.SendPropertyChanging();
					this._instockdate = value;
					this.SendPropertyChanged("instockdate");
					this.OninstockdateChanged();
				}
			}
		}
		
		[Column(Storage="_hasoutstock", DbType="Int")]
		public System.Nullable<int> hasoutstock
		{
			get
			{
				return this._hasoutstock;
			}
			set
			{
				if ((this._hasoutstock != value))
				{
					this.OnhasoutstockChanging(value);
					this.SendPropertyChanging();
					this._hasoutstock = value;
					this.SendPropertyChanged("hasoutstock");
					this.OnhasoutstockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.sales")]
	public partial class sales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _cid;
		
		private System.Guid _sid;
		
		private System.Guid _pid;
		
		private decimal _saleprice;
		
		private int _salecount;
		
		private decimal _totalmoney;
		
		private System.Nullable<System.DateTime> _saledate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncidChanging(System.Guid value);
    partial void OncidChanged();
    partial void OnsidChanging(System.Guid value);
    partial void OnsidChanged();
    partial void OnpidChanging(System.Guid value);
    partial void OnpidChanged();
    partial void OnsalepriceChanging(decimal value);
    partial void OnsalepriceChanged();
    partial void OnsalecountChanging(int value);
    partial void OnsalecountChanged();
    partial void OntotalmoneyChanging(decimal value);
    partial void OntotalmoneyChanged();
    partial void OnsaledateChanging(System.Nullable<System.DateTime> value);
    partial void OnsaledateChanged();
    #endregion
		
		public sales()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_cid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[Column(Storage="_sid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[Column(Storage="_pid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[Column(Storage="_saleprice", DbType="Decimal(18,2) NOT NULL")]
		public decimal saleprice
		{
			get
			{
				return this._saleprice;
			}
			set
			{
				if ((this._saleprice != value))
				{
					this.OnsalepriceChanging(value);
					this.SendPropertyChanging();
					this._saleprice = value;
					this.SendPropertyChanged("saleprice");
					this.OnsalepriceChanged();
				}
			}
		}
		
		[Column(Storage="_salecount", DbType="Int NOT NULL")]
		public int salecount
		{
			get
			{
				return this._salecount;
			}
			set
			{
				if ((this._salecount != value))
				{
					this.OnsalecountChanging(value);
					this.SendPropertyChanging();
					this._salecount = value;
					this.SendPropertyChanged("salecount");
					this.OnsalecountChanged();
				}
			}
		}
		
		[Column(Storage="_totalmoney", DbType="Decimal(18,2) NOT NULL")]
		public decimal totalmoney
		{
			get
			{
				return this._totalmoney;
			}
			set
			{
				if ((this._totalmoney != value))
				{
					this.OntotalmoneyChanging(value);
					this.SendPropertyChanging();
					this._totalmoney = value;
					this.SendPropertyChanged("totalmoney");
					this.OntotalmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_saledate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> saledate
		{
			get
			{
				return this._saledate;
			}
			set
			{
				if ((this._saledate != value))
				{
					this.OnsaledateChanging(value);
					this.SendPropertyChanging();
					this._saledate = value;
					this.SendPropertyChanged("saledate");
					this.OnsaledateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.backsales")]
	public partial class backsales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _saleid;
		
		private System.Guid _cid;
		
		private System.Guid _tosid;
		
		private decimal _backmoney;
		
		private System.Nullable<System.DateTime> _backdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnsaleidChanging(System.Guid value);
    partial void OnsaleidChanged();
    partial void OncidChanging(System.Guid value);
    partial void OncidChanged();
    partial void OntosidChanging(System.Guid value);
    partial void OntosidChanged();
    partial void OnbackmoneyChanging(decimal value);
    partial void OnbackmoneyChanged();
    partial void OnbackdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbackdateChanged();
    #endregion
		
		public backsales()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_saleid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid saleid
		{
			get
			{
				return this._saleid;
			}
			set
			{
				if ((this._saleid != value))
				{
					this.OnsaleidChanging(value);
					this.SendPropertyChanging();
					this._saleid = value;
					this.SendPropertyChanged("saleid");
					this.OnsaleidChanged();
				}
			}
		}
		
		[Column(Storage="_cid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[Column(Storage="_tosid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid tosid
		{
			get
			{
				return this._tosid;
			}
			set
			{
				if ((this._tosid != value))
				{
					this.OntosidChanging(value);
					this.SendPropertyChanging();
					this._tosid = value;
					this.SendPropertyChanged("tosid");
					this.OntosidChanged();
				}
			}
		}
		
		[Column(Storage="_backmoney", DbType="Decimal(18,2) NOT NULL")]
		public decimal backmoney
		{
			get
			{
				return this._backmoney;
			}
			set
			{
				if ((this._backmoney != value))
				{
					this.OnbackmoneyChanging(value);
					this.SendPropertyChanging();
					this._backmoney = value;
					this.SendPropertyChanged("backmoney");
					this.OnbackmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_backdate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> backdate
		{
			get
			{
				return this._backdate;
			}
			set
			{
				if ((this._backdate != value))
				{
					this.OnbackdateChanging(value);
					this.SendPropertyChanging();
					this._backdate = value;
					this.SendPropertyChanged("backdate");
					this.OnbackdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.operators")]
	public partial class salers
	{
		
		private System.Guid _id;
		
		private string _usercode;
		
		private string _fullname;
		
		private string _password;
		
		private System.Nullable<bool> _isadmin;
		
		public salers()
		{
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_usercode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usercode
		{
			get
			{
				return this._usercode;
			}
			set
			{
				if ((this._usercode != value))
				{
					this._usercode = value;
				}
			}
		}
		
		[Column(Storage="_fullname", DbType="VarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this._fullname = value;
				}
			}
		}
		
		[Column(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[Column(Storage="_isadmin", DbType="Bit")]
		public System.Nullable<bool> isadmin
		{
			get
			{
				return this._isadmin;
			}
			set
			{
				if ((this._isadmin != value))
				{
					this._isadmin = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
